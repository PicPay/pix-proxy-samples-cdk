{
  "Resources": {
    "ConfigMtlsPrivateKeySecretManager4816C5BD": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {},
        "Name": "/pix/proxy/kms/MtlsPrivateKey"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/MtlsPrivateKeySecretManager/Resource"
      }
    },
    "ConfigMtlsCertificateParamE507E933": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "MtlsCertificate"
        },
        "Name": "/pix/proxy/kms/MtlsCertificate"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/MtlsCertificateParam/Resource"
      }
    },
    "ConfigSignatureKeyIdParamB6F58F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "SignatureKeyId"
        },
        "Name": "/pix/proxy/kms/SignatureKeyId"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/SignatureKeyIdParam/Resource"
      }
    },
    "ConfigSignatureCertificateParamC6A7ABCD": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "SignatureCertificate"
        },
        "Name": "/pix/proxy/kms/SignatureCertificate"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/SignatureCertificateParam/Resource"
      }
    },
    "ConfigBcbMtlsCertificateParamF41D2C9A": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "BcbMtlsCertificate"
        },
        "Name": "/pix/proxy/kms/BcbMtlsCertificate"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/BcbMtlsCertificateParam/Resource"
      }
    },
    "ConfigBcbSignatureCertificateParam33165796": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "BcbSignatureCertificate"
        },
        "Name": "/pix/proxy/kms/BcbSignatureCertificate"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/BcbSignatureCertificateParam/Resource"
      }
    },
    "ConfigBcbDictEndpointParam09349C71": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "BcbDictEndpoint"
        },
        "Name": "/pix/proxy/kms/BcbDictEndpoint"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/BcbDictEndpointParam/Resource"
      }
    },
    "ConfigBcbSpiEndpointParamAAC023B4": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "BcbSpiEndpoint"
        },
        "Name": "/pix/proxy/kms/BcbSpiEndpoint"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/BcbSpiEndpointParam/Resource"
      }
    },
    "ConfigGitHubSecretManager7469032A": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "GenerateStringKey": "RANDOM",
          "SecretStringTemplate": {
            "Fn::Join": [
              "",
              [
                "{\"token\":\"",
                {
                  "Ref": "GitHubToken"
                },
                "\"}"
              ]
            ]
          }
        },
        "Name": "/pix/proxy/kms/GitHubToken"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Config/GitHubSecretManager/Resource"
      }
    },
    "BaseVpc4D0293C1": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.28.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/Resource"
      }
    },
    "BaseVpcPublicSubnet1Subnet04A08E07": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.28.0.0/18",
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/Subnet"
      }
    },
    "BaseVpcPublicSubnet1RouteTable910E048A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/RouteTable"
      }
    },
    "BaseVpcPublicSubnet1RouteTableAssociation9710265F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPublicSubnet1RouteTable910E048A"
        },
        "SubnetId": {
          "Ref": "BaseVpcPublicSubnet1Subnet04A08E07"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "BaseVpcPublicSubnet1DefaultRoute69EEA2AB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPublicSubnet1RouteTable910E048A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "BaseVpcIGWD7707A1B"
        }
      },
      "DependsOn": [
        "BaseVpcVPCGW2058C1D6"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/DefaultRoute"
      }
    },
    "BaseVpcPublicSubnet1EIP0FC17686": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/EIP"
      }
    },
    "BaseVpcPublicSubnet1NATGateway152D82D5": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "BaseVpcPublicSubnet1EIP0FC17686",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "BaseVpcPublicSubnet1Subnet04A08E07"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet1/NATGateway"
      }
    },
    "BaseVpcPublicSubnet2Subnet92BCD4F8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.28.64.0/18",
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/Subnet"
      }
    },
    "BaseVpcPublicSubnet2RouteTable7BFCE26C": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/RouteTable"
      }
    },
    "BaseVpcPublicSubnet2RouteTableAssociationADE2FB5B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPublicSubnet2RouteTable7BFCE26C"
        },
        "SubnetId": {
          "Ref": "BaseVpcPublicSubnet2Subnet92BCD4F8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "BaseVpcPublicSubnet2DefaultRoute8645B21A": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPublicSubnet2RouteTable7BFCE26C"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "BaseVpcIGWD7707A1B"
        }
      },
      "DependsOn": [
        "BaseVpcVPCGW2058C1D6"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/DefaultRoute"
      }
    },
    "BaseVpcPublicSubnet2EIPC38E4D6E": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/EIP"
      }
    },
    "BaseVpcPublicSubnet2NATGateway6322CE25": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "BaseVpcPublicSubnet2EIPC38E4D6E",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "BaseVpcPublicSubnet2Subnet92BCD4F8"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PublicSubnet2/NATGateway"
      }
    },
    "BaseVpcPrivateSubnet1Subnet8DFC4571": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.28.128.0/18",
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1/Subnet"
      }
    },
    "BaseVpcPrivateSubnet1RouteTableFBF5C3D7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1/RouteTable"
      }
    },
    "BaseVpcPrivateSubnet1RouteTableAssociation9AD9A06A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPrivateSubnet1RouteTableFBF5C3D7"
        },
        "SubnetId": {
          "Ref": "BaseVpcPrivateSubnet1Subnet8DFC4571"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "BaseVpcPrivateSubnet1DefaultRoute99EA3ACC": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPrivateSubnet1RouteTableFBF5C3D7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "BaseVpcPublicSubnet1NATGateway152D82D5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "BaseVpcPrivateSubnet2Subnet3B24C618": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.28.192.0/18",
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2/Subnet"
      }
    },
    "BaseVpcPrivateSubnet2RouteTable31D4362E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2/RouteTable"
      }
    },
    "BaseVpcPrivateSubnet2RouteTableAssociation2DCF8F61": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPrivateSubnet2RouteTable31D4362E"
        },
        "SubnetId": {
          "Ref": "BaseVpcPrivateSubnet2Subnet3B24C618"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "BaseVpcPrivateSubnet2DefaultRouteABC4ECF4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "BaseVpcPrivateSubnet2RouteTable31D4362E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "BaseVpcPublicSubnet2NATGateway6322CE25"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "BaseVpcIGWD7707A1B": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pix-Proxy-KMS/Base/Vpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/IGW"
      }
    },
    "BaseVpcVPCGW2058C1D6": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "BaseVpc4D0293C1"
        },
        "InternetGatewayId": {
          "Ref": "BaseVpcIGWD7707A1B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Vpc/VPCGW"
      }
    },
    "BaseZone26A45D0A": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "rsfn.net.br.",
        "VPCs": [
          {
            "VPCId": {
              "Ref": "BaseVpc4D0293C1"
            },
            "VPCRegion": {
              "Ref": "AWS::Region"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Base/Zone/Resource"
      }
    },
    "TestBaseRepoTest5B4C46EB": {
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/TestBase/RepoTest/Resource"
      }
    },
    "TestBaseTestContainerImageBuildRoleF8CD99F1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/TestBase/TestContainerImageBuild/Role/Resource"
      }
    },
    "TestBaseTestContainerImageBuildRoleDefaultPolicyD663D3C4": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "TestBaseTestContainerImageBuild456B5D3B"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "TestBaseTestContainerImageBuild456B5D3B"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "TestBaseTestContainerImageBuild456B5D3B"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestBaseRepoTest5B4C46EB",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestBaseRepoTest5B4C46EB",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "TestBaseTestContainerImageBuildRoleDefaultPolicyD663D3C4",
        "Roles": [
          {
            "Ref": "TestBaseTestContainerImageBuildRoleF8CD99F1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/TestBase/TestContainerImageBuild/Role/DefaultPolicy/Resource"
      }
    },
    "TestBaseTestContainerImageBuild456B5D3B": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "REPOSITORY_URI",
              "Type": "PLAINTEXT",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::Select": [
                        4,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "TestBaseRepoTest5B4C46EB",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    ".dkr.ecr.",
                    {
                      "Fn::Select": [
                        3,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "TestBaseRepoTest5B4C46EB",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/",
                    {
                      "Ref": "TestBaseRepoTest5B4C46EB"
                    }
                  ]
                ]
              }
            }
          ],
          "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "TestBaseTestContainerImageBuildRoleF8CD99F1",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"java\": \"corretto11\"\n      },\n      \"commands\": [\n        \"java -version\",\n        \"mvn -version\",\n        \"aws --version\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"mvn -f proxy/pom.xml -pl core,test -DskipTests clean package\",\n        \"$(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)\",\n        \"COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)\",\n        \"docker build -f proxy/test/src/main/docker/Dockerfile -t $REPOSITORY_URI:latest .\",\n        \"docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$COMMIT_HASH\"\n      ]\n    },\n    \"post_build\": {\n      \"commands\": [\n        \"docker push $REPOSITORY_URI:latest\",\n        \"docker push $REPOSITORY_URI:$COMMIT_HASH\",\n        \"printf \\\"[{\\\\\\\"name\\\\\\\":\\\\\\\"pix-proxy-test\\\\\\\",\\\\\\\"imageUri\\\\\\\":\\\\\\\"${REPOSITORY_URI}:latest\\\\\\\"}]\\\" > imagedefinitions.json\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"imagedefinitions.json\"\n    ]\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "PipelineArtifactsBucketEncryptionKeyF5BF0670",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/TestBase/TestContainerImageBuild/Resource"
      }
    },
    "AuditBucket7486E833": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Bucket/Resource"
      }
    },
    "AuditAuditDatabaseAB060990": {
      "Type": "AWS::Glue::Database",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseInput": {
          "Name": "pix-proxy-kms"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/AuditDatabase/Resource"
      }
    },
    "AuditDictAuditTable4DEB2FB3": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "AuditAuditDatabaseAB060990"
        },
        "TableInput": {
          "Description": "dict generated by CDK",
          "Name": "dict",
          "Parameters": {
            "has_encrypted_data": false
          },
          "PartitionKeys": [
            {
              "Name": "year",
              "Type": "string"
            },
            {
              "Name": "month",
              "Type": "string"
            },
            {
              "Name": "day",
              "Type": "string"
            },
            {
              "Name": "hour",
              "Type": "string"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "request_date",
                "Type": "string"
              },
              {
                "Name": "request_method",
                "Type": "string"
              },
              {
                "Name": "request_path",
                "Type": "string"
              },
              {
                "Name": "request_header",
                "Type": "string"
              },
              {
                "Name": "request_body",
                "Type": "string"
              },
              {
                "Name": "response_status_code",
                "Type": "int"
              },
              {
                "Name": "response_signature_valid",
                "Type": "string"
              },
              {
                "Name": "response_header",
                "Type": "string"
              },
              {
                "Name": "response_body",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "AuditBucket7486E833"
                  },
                  "/log/dict"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": false
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-AuditTable/Table"
      }
    },
    "AuditDictFirehoseLogF09206B1": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-FirehoseLog/Resource"
      }
    },
    "AuditDictFirehoseLogStream005A1D10": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "AuditDictFirehoseLogF09206B1"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-FirehoseLogStream/Resource"
      }
    },
    "AuditDictFirehoseRole17992743": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-FirehoseRole/Resource"
      }
    },
    "AuditDictFirehosePolicyEFAEA1DA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AuditBucket7486E833",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AuditBucket7486E833",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AuditDictFirehoseLogF09206B1",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "AuditAuditDatabaseAB060990"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "AuditAuditDatabaseAB060990"
                      },
                      "/",
                      {
                        "Ref": "AuditDictAuditTable4DEB2FB3"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AuditDictFirehosePolicyEFAEA1DA",
        "Roles": [
          {
            "Ref": "AuditDictFirehoseRole17992743"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-FirehosePolicy/Resource"
      }
    },
    "AuditDictFirehoseDFF592F9": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "AuditBucket7486E833",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "AuditDictFirehoseLogF09206B1"
            },
            "LogStreamName": {
              "Ref": "AuditDictFirehoseLogStream005A1D10"
            }
          },
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY"
                }
              }
            },
            "SchemaConfiguration": {
              "CatalogId": {
                "Ref": "AWS::AccountId"
              },
              "DatabaseName": {
                "Ref": "AuditAuditDatabaseAB060990"
              },
              "Region": {
                "Ref": "AWS::Region"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "AuditDictFirehoseRole17992743",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "AuditDictAuditTable4DEB2FB3"
              },
              "VersionId": "LATEST"
            }
          },
          "ErrorOutputPrefix": "error/dict/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/!{firehose:error-output-type}",
          "Prefix": "log/dict/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "RoleARN": {
            "Fn::GetAtt": [
              "AuditDictFirehoseRole17992743",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "AuditDictFirehosePolicyEFAEA1DA"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-Firehose"
      }
    },
    "AuditDictFirehoseStreamNameParam268F0060": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "AuditDictFirehoseDFF592F9"
        },
        "Name": "/pix/proxy/kms/DictAuditStream"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Dict-Firehose-StreamName-Param/Resource"
      }
    },
    "AuditSpiAuditTableA2D0A7A1": {
      "Type": "AWS::Glue::Table",
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId"
        },
        "DatabaseName": {
          "Ref": "AuditAuditDatabaseAB060990"
        },
        "TableInput": {
          "Description": "spi generated by CDK",
          "Name": "spi",
          "Parameters": {
            "has_encrypted_data": false
          },
          "PartitionKeys": [
            {
              "Name": "year",
              "Type": "string"
            },
            {
              "Name": "month",
              "Type": "string"
            },
            {
              "Name": "day",
              "Type": "string"
            },
            {
              "Name": "hour",
              "Type": "string"
            }
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "request_date",
                "Type": "string"
              },
              {
                "Name": "request_method",
                "Type": "string"
              },
              {
                "Name": "request_path",
                "Type": "string"
              },
              {
                "Name": "request_header",
                "Type": "string"
              },
              {
                "Name": "request_body",
                "Type": "string"
              },
              {
                "Name": "response_status_code",
                "Type": "int"
              },
              {
                "Name": "response_signature_valid",
                "Type": "string"
              },
              {
                "Name": "response_header",
                "Type": "string"
              },
              {
                "Name": "response_body",
                "Type": "string"
              }
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "AuditBucket7486E833"
                  },
                  "/log/spi"
                ]
              ]
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
            },
            "StoredAsSubDirectories": false
          },
          "TableType": "EXTERNAL_TABLE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-AuditTable/Table"
      }
    },
    "AuditSpiFirehoseLog285129C5": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-FirehoseLog/Resource"
      }
    },
    "AuditSpiFirehoseLogStreamE1470ACD": {
      "Type": "AWS::Logs::LogStream",
      "Properties": {
        "LogGroupName": {
          "Ref": "AuditSpiFirehoseLog285129C5"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-FirehoseLogStream/Resource"
      }
    },
    "AuditSpiFirehoseRole84341E60": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-FirehoseRole/Resource"
      }
    },
    "AuditSpiFirehosePolicy743DE330": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "AuditBucket7486E833",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AuditBucket7486E833",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "logs:PutLogEvents",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "AuditSpiFirehoseLog285129C5",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "glue:GetTable",
                "glue:GetTableVersion",
                "glue:GetTableVersions"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":catalog"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":database/",
                      {
                        "Ref": "AuditAuditDatabaseAB060990"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/",
                      {
                        "Ref": "AuditAuditDatabaseAB060990"
                      },
                      "/",
                      {
                        "Ref": "AuditSpiAuditTableA2D0A7A1"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AuditSpiFirehosePolicy743DE330",
        "Roles": [
          {
            "Ref": "AuditSpiFirehoseRole84341E60"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-FirehosePolicy/Resource"
      }
    },
    "AuditSpiFirehose0CF493A7": {
      "Type": "AWS::KinesisFirehose::DeliveryStream",
      "Properties": {
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "AuditBucket7486E833",
              "Arn"
            ]
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 128
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "AuditSpiFirehoseLog285129C5"
            },
            "LogStreamName": {
              "Ref": "AuditSpiFirehoseLogStreamE1470ACD"
            }
          },
          "DataFormatConversionConfiguration": {
            "Enabled": true,
            "InputFormatConfiguration": {
              "Deserializer": {
                "OpenXJsonSerDe": {}
              }
            },
            "OutputFormatConfiguration": {
              "Serializer": {
                "ParquetSerDe": {
                  "Compression": "SNAPPY"
                }
              }
            },
            "SchemaConfiguration": {
              "CatalogId": {
                "Ref": "AWS::AccountId"
              },
              "DatabaseName": {
                "Ref": "AuditAuditDatabaseAB060990"
              },
              "Region": {
                "Ref": "AWS::Region"
              },
              "RoleARN": {
                "Fn::GetAtt": [
                  "AuditSpiFirehoseRole84341E60",
                  "Arn"
                ]
              },
              "TableName": {
                "Ref": "AuditSpiAuditTableA2D0A7A1"
              },
              "VersionId": "LATEST"
            }
          },
          "ErrorOutputPrefix": "error/spi/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/!{firehose:error-output-type}",
          "Prefix": "log/spi/year=!{timestamp:yyyy}/month=!{timestamp:MM}/day=!{timestamp:dd}/hour=!{timestamp:HH}/",
          "RoleARN": {
            "Fn::GetAtt": [
              "AuditSpiFirehoseRole84341E60",
              "Arn"
            ]
          }
        }
      },
      "DependsOn": [
        "AuditSpiFirehosePolicy743DE330"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-Firehose"
      }
    },
    "AuditSpiFirehoseStreamNameParamB09B9793": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Ref": "AuditSpiFirehose0CF493A7"
        },
        "Name": "/pix/proxy/kms/SpiAuditStream"
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Spi-Firehose-StreamName-Param/Resource"
      }
    },
    "AuditGlueCrawlerRoleA094D37B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/GlueCrawlerRole/Resource"
      }
    },
    "AuditGlueCrawlerRolePolicy3A5CAE16": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AuditBucket7486E833",
                          "Arn"
                        ]
                      },
                      "/log/dict*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "AuditBucket7486E833",
                          "Arn"
                        ]
                      },
                      "/log/spi*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AuditGlueCrawlerRolePolicy3A5CAE16",
        "Roles": [
          {
            "Ref": "AuditGlueCrawlerRoleA094D37B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/GlueCrawlerRolePolicy/Resource"
      }
    },
    "AuditPixProxyAuditCrawler90C46751": {
      "Type": "AWS::Glue::Crawler",
      "Properties": {
        "Role": {
          "Fn::GetAtt": [
            "AuditGlueCrawlerRoleA094D37B",
            "Arn"
          ]
        },
        "Targets": {
          "CatalogTargets": [
            {
              "DatabaseName": {
                "Ref": "AuditAuditDatabaseAB060990"
              },
              "Tables": [
                "dict",
                "spi"
              ]
            }
          ]
        },
        "Schedule": {
          "ScheduleExpression": "cron(10 * * * ? *)"
        },
        "SchemaChangePolicy": {
          "DeleteBehavior": "LOG",
          "UpdateBehavior": "UPDATE_IN_DATABASE"
        }
      },
      "DependsOn": [
        "AuditGlueCrawlerRolePolicy3A5CAE16"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Audit/Pix-Proxy-Audit-Crawler"
      }
    },
    "PipelineLambdaFunctionBuildRoleFE59EFAC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/LambdaFunctionBuild/Role/Resource"
      }
    },
    "PipelineLambdaFunctionBuildRoleDefaultPolicy0E665498": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "PipelineLambdaFunctionBuild1147AA16"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "PipelineLambdaFunctionBuild1147AA16"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "PipelineLambdaFunctionBuild1147AA16"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineLambdaFunctionBuildRoleDefaultPolicy0E665498",
        "Roles": [
          {
            "Ref": "PipelineLambdaFunctionBuildRoleFE59EFAC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/LambdaFunctionBuild/Role/DefaultPolicy/Resource"
      }
    },
    "PipelineLambdaFunctionBuild1147AA16": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_MEDIUM",
          "Image": "aws/codebuild/amazonlinux2-x86_64-standard:3.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "PipelineLambdaFunctionBuildRoleFE59EFAC",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"java\": \"corretto11\"\n      },\n      \"commands\": [\n        \"java -version\",\n        \"mvn -version\",\n        \"aws --version\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cd $CODEBUILD_SRC_DIR_kmsJce\",\n        \"mvn clean install -DskipTests\",\n        \"cd $CODEBUILD_SRC_DIR\",\n        \"mvn -f proxy/pom.xml -pl core,kms clean package -DskipTests -Pnative -Dnative-image.docker-build=true\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"base-directory\": \"$CODEBUILD_SRC_DIR/proxy/kms/target\",\n    \"files\": [\n      \"function.zip\"\n    ]\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "EncryptionKey": {
          "Fn::GetAtt": [
            "PipelineArtifactsBucketEncryptionKeyF5BF0670",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/LambdaFunctionBuild/Resource"
      }
    },
    "PipelineArtifactsBucketEncryptionKeyF5BF0670": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineRoleB27FAA37",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineLambdaFunctionBuildRoleFE59EFAC",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineLambdaFunctionBuildRoleFE59EFAC",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TestBaseTestContainerImageBuildRoleF8CD99F1",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "TestBaseTestContainerImageBuildRoleF8CD99F1",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineLambdaStackDeployRoleFADAEE38",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "PipelineLambdaStackDeployCodePipelineActionRole9D567907",
                    "Arn"
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/ArtifactsBucketEncryptionKey/Resource"
      }
    },
    "PipelineArtifactsBucketAEA9A052": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/ArtifactsBucket/Resource"
      }
    },
    "PipelineArtifactsBucketEncryptionKeyAlias94A07392": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/codepipeline-pixproxykmspipeline27ccdb06",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "PipelineArtifactsBucketEncryptionKeyF5BF0670",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/ArtifactsBucketEncryptionKeyAlias/Resource"
      }
    },
    "PipelineRoleB27FAA37": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Role/Resource"
      }
    },
    "PipelineRoleDefaultPolicy7BDC1ABB": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineBuildLambdaFunctionBuildCodePipelineActionRole9959117F",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineBuildTestContainerImageBuildCodePipelineActionRoleC955F653",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineApprovalManualApprovalCodePipelineActionRole89AB13BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineLambdaStackDeployCodePipelineActionRole9D567907",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineRoleDefaultPolicy7BDC1ABB",
        "Roles": [
          {
            "Ref": "PipelineRoleB27FAA37"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Role/DefaultPolicy/Resource"
      }
    },
    "Pipeline9850B417": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "PipelineRoleB27FAA37",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "llins",
                  "Repo": "pix-proxy-samples-private",
                  "Branch": "master",
                  "OAuthToken": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:secretsmanager:",
                        {
                          "Ref": "ConfigGitHubSecretManager7469032A"
                        },
                        ":SecretString:token::}}"
                      ]
                    ]
                  },
                  "PollForSourceChanges": false
                },
                "Name": "GitHub_Source",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub_Source"
                  }
                ],
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "aws-samples",
                  "Repo": "aws-kms-jce",
                  "Branch": "master",
                  "OAuthToken": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:secretsmanager:",
                        {
                          "Ref": "ConfigGitHubSecretManager7469032A"
                        },
                        ":SecretString:token::}}"
                      ]
                    ]
                  },
                  "PollForSourceChanges": false
                },
                "Name": "GitHub_KmsJceSource",
                "OutputArtifacts": [
                  {
                    "Name": "kmsJce"
                  }
                ],
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": "llins",
                  "Repo": "pix-proxy-samples-cdk",
                  "Branch": "master",
                  "OAuthToken": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:secretsmanager:",
                        {
                          "Ref": "ConfigGitHubSecretManager7469032A"
                        },
                        ":SecretString:token::}}"
                      ]
                    ]
                  },
                  "PollForSourceChanges": false
                },
                "Name": "GitHub_Cdk",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub_Cdk"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "PipelineLambdaFunctionBuild1147AA16"
                  },
                  "PrimarySource": "Artifact_Source_GitHub_Source"
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub_Source"
                  },
                  {
                    "Name": "kmsJce"
                  }
                ],
                "Name": "LambdaFunction_Build",
                "OutputArtifacts": [
                  {
                    "Name": "LambdaFunctionBuildOutput"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineBuildLambdaFunctionBuildCodePipelineActionRole9959117F",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              },
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "TestBaseTestContainerImageBuild456B5D3B"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_GitHub_Source"
                  }
                ],
                "Name": "TestContainerImage_Build",
                "OutputArtifacts": [
                  {
                    "Name": "TestContainerImageBuildOutput"
                  }
                ],
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineBuildTestContainerImageBuildCodePipelineActionRoleC955F653",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Build"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Approval",
                  "Owner": "AWS",
                  "Provider": "Manual",
                  "Version": "1"
                },
                "Configuration": {
                  "CustomData": "Attention! Continue only if you have imported all the necessary certificates!"
                },
                "Name": "ManualApproval",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineApprovalManualApprovalCodePipelineActionRole89AB13BC",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Approval"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Deploy",
                  "Owner": "AWS",
                  "Provider": "CloudFormation",
                  "Version": "1"
                },
                "Configuration": {
                  "StackName": "Pix-Proxy-KMS-Lambda",
                  "Capabilities": "CAPABILITY_NAMED_IAM",
                  "RoleArn": {
                    "Fn::GetAtt": [
                      "PipelineLambdaStackDeployRoleFADAEE38",
                      "Arn"
                    ]
                  },
                  "ParameterOverrides": "{\"ProxySpiLambdaLambdaSourceBucketNameParameter977E85B7\":{\"Fn::GetArtifactAtt\":[\"LambdaFunctionBuildOutput\",\"BucketName\"]},\"ProxySpiLambdaLambdaSourceObjectKeyParameterC7492CB5\":{\"Fn::GetArtifactAtt\":[\"LambdaFunctionBuildOutput\",\"ObjectKey\"]}}",
                  "ActionMode": "CREATE_UPDATE",
                  "TemplatePath": "Artifact_Source_GitHub_Cdk::cdk.out/Pix-Proxy-KMS-Lambda.template.json"
                },
                "InputArtifacts": [
                  {
                    "Name": "LambdaFunctionBuildOutput"
                  },
                  {
                    "Name": "Artifact_Source_GitHub_Cdk"
                  }
                ],
                "Name": "Deploy",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "PipelineLambdaStackDeployCodePipelineActionRole9D567907",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "LambdaStack"
          }
        ],
        "ArtifactStore": {
          "EncryptionKey": {
            "Id": {
              "Fn::GetAtt": [
                "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                "Arn"
              ]
            },
            "Type": "KMS"
          },
          "Location": {
            "Ref": "PipelineArtifactsBucketAEA9A052"
          },
          "Type": "S3"
        }
      },
      "DependsOn": [
        "PipelineRoleDefaultPolicy7BDC1ABB",
        "PipelineRoleB27FAA37"
      ],
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Resource"
      }
    },
    "PipelineBuildLambdaFunctionBuildCodePipelineActionRole9959117F": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Build/LambdaFunction_Build/CodePipelineActionRole/Resource"
      }
    },
    "PipelineBuildLambdaFunctionBuildCodePipelineActionRoleDefaultPolicy5F98184E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineLambdaFunctionBuild1147AA16",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineBuildLambdaFunctionBuildCodePipelineActionRoleDefaultPolicy5F98184E",
        "Roles": [
          {
            "Ref": "PipelineBuildLambdaFunctionBuildCodePipelineActionRole9959117F"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Build/LambdaFunction_Build/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "PipelineBuildTestContainerImageBuildCodePipelineActionRoleC955F653": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Build/TestContainerImage_Build/CodePipelineActionRole/Resource"
      }
    },
    "PipelineBuildTestContainerImageBuildCodePipelineActionRoleDefaultPolicy6EB4C281": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestBaseTestContainerImageBuild456B5D3B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineBuildTestContainerImageBuildCodePipelineActionRoleDefaultPolicy6EB4C281",
        "Roles": [
          {
            "Ref": "PipelineBuildTestContainerImageBuildCodePipelineActionRoleC955F653"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Build/TestContainerImage_Build/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "PipelineApprovalManualApprovalCodePipelineActionRole89AB13BC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/Approval/ManualApproval/CodePipelineActionRole/Resource"
      }
    },
    "PipelineLambdaStackDeployCodePipelineActionRole9D567907": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/LambdaStack/Deploy/CodePipelineActionRole/Resource"
      }
    },
    "PipelineLambdaStackDeployCodePipelineActionRoleDefaultPolicy2CA83519": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineLambdaStackDeployRoleFADAEE38",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DescribeStack*",
                "cloudformation:GetStackPolicy",
                "cloudformation:GetTemplate*",
                "cloudformation:SetStackPolicy",
                "cloudformation:UpdateStack",
                "cloudformation:ValidateTemplate"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":cloudformation:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":stack/Pix-Proxy-KMS-Lambda/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineLambdaStackDeployCodePipelineActionRoleDefaultPolicy2CA83519",
        "Roles": [
          {
            "Ref": "PipelineLambdaStackDeployCodePipelineActionRole9D567907"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/LambdaStack/Deploy/CodePipelineActionRole/DefaultPolicy/Resource"
      }
    },
    "PipelineLambdaStackDeployRoleFADAEE38": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/LambdaStack/Deploy/Role/Resource"
      }
    },
    "PipelineLambdaStackDeployRoleDefaultPolicyF3746693": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "PipelineArtifactsBucketAEA9A052",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "PipelineArtifactsBucketAEA9A052",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "PipelineArtifactsBucketEncryptionKeyF5BF0670",
                  "Arn"
                ]
              }
            },
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "PipelineLambdaStackDeployRoleDefaultPolicyF3746693",
        "Roles": [
          {
            "Ref": "PipelineLambdaStackDeployRoleFADAEE38"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Pix-Proxy-KMS/Pipeline/Pipeline/LambdaStack/Deploy/Role/DefaultPolicy/Resource"
      }
    }
  },
  "Outputs": {
    "MtlsPrivateKeyARN": {
      "Value": {
        "Ref": "ConfigMtlsPrivateKeySecretManager4816C5BD"
      }
    },
    "MtlsCertificateParameter": {
      "Value": {
        "Ref": "ConfigMtlsCertificateParamE507E933"
      }
    },
    "SignatureKeyIdParameter": {
      "Value": {
        "Ref": "ConfigSignatureKeyIdParamB6F58F6B"
      }
    },
    "SignatureCertificateParameter": {
      "Value": {
        "Ref": "ConfigSignatureCertificateParamC6A7ABCD"
      }
    },
    "BcbMtlsCertificateParameter": {
      "Value": {
        "Ref": "ConfigBcbMtlsCertificateParamF41D2C9A"
      }
    },
    "BcbSignatureCertificateParameter": {
      "Value": {
        "Ref": "ConfigBcbSignatureCertificateParam33165796"
      }
    },
    "BcbDictEndpointParameter": {
      "Value": {
        "Ref": "ConfigBcbDictEndpointParam09349C71"
      }
    },
    "BcbSpiEndpointParameter": {
      "Value": {
        "Ref": "ConfigBcbSpiEndpointParamAAC023B4"
      }
    },
    "GitHubSecretARN": {
      "Value": {
        "Ref": "ConfigGitHubSecretManager7469032A"
      }
    },
    "ProxyVpcId": {
      "Value": {
        "Ref": "BaseVpc4D0293C1"
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-VpcId"
      }
    },
    "ProxyVpcCidr": {
      "Value": {
        "Fn::GetAtt": [
          "BaseVpc4D0293C1",
          "CidrBlock"
        ]
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-VpcCidr"
      }
    },
    "ProxyVpcAZs": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Fn::Select": [
                0,
                {
                  "Fn::GetAZs": ""
                }
              ]
            },
            {
              "Fn::Select": [
                1,
                {
                  "Fn::GetAZs": ""
                }
              ]
            }
          ]
        ]
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-VpcAZs"
      }
    },
    "ProxyVpcPrivateSubnetIds": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Ref": "BaseVpcPrivateSubnet1Subnet8DFC4571"
            },
            {
              "Ref": "BaseVpcPrivateSubnet2Subnet3B24C618"
            }
          ]
        ]
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-VpcPrivateSubnetIds"
      }
    },
    "ProxyVpcPublicSubnetIds": {
      "Value": {
        "Fn::Join": [
          ",",
          [
            {
              "Ref": "BaseVpcPrivateSubnet1Subnet8DFC4571"
            },
            {
              "Ref": "BaseVpcPrivateSubnet2Subnet3B24C618"
            }
          ]
        ]
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-VpcPublicSubnetIds"
      }
    },
    "Route53RSFNZone": {
      "Value": {
        "Ref": "BaseZone26A45D0A"
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-RsfnZone"
      }
    },
    "EcrRepoTest": {
      "Value": {
        "Ref": "TestBaseRepoTest5B4C46EB"
      },
      "Export": {
        "Name": "Pix-Proxy-KMS-EcrRepoTest"
      }
    },
    "S3BucketARN": {
      "Description": "Pix-Proxy Audit S3 bucket ARN",
      "Value": {
        "Fn::GetAtt": [
          "AuditBucket7486E833",
          "Arn"
        ]
      }
    },
    "GlueDatabaseName": {
      "Description": "Pix-Proxy Audit Glue Database name",
      "Value": {
        "Ref": "AuditAuditDatabaseAB060990"
      }
    },
    "DictFirehoseStreamName": {
      "Description": "Pix-Proxy Audit Dict Firehose delivery stream ARN",
      "Value": {
        "Ref": "AuditDictFirehoseDFF592F9"
      }
    },
    "DictFirehoseLogGroupName": {
      "Description": "Pix-Proxy Audit Dict Firehose CloudWatch Log Group name",
      "Value": {
        "Ref": "AuditDictFirehoseLogF09206B1"
      }
    },
    "DictFirehoseLogStreamName": {
      "Description": "Pix-Proxy Audit Dict Firehose CloudWatch Log Stream name",
      "Value": {
        "Ref": "AuditDictFirehoseLogStream005A1D10"
      }
    },
    "DictGlueTableName": {
      "Description": "Pix-Proxy Audit Dict Glue Table name",
      "Value": {
        "Ref": "AuditDictAuditTable4DEB2FB3"
      }
    },
    "SpiFirehoseStreamName": {
      "Description": "Pix-Proxy Audit Spi Firehose delivery stream ARN",
      "Value": {
        "Ref": "AuditSpiFirehose0CF493A7"
      }
    },
    "SpiFirehoseLogGroupName": {
      "Description": "Pix-Proxy Audit Spi Firehose CloudWatch Log Group name",
      "Value": {
        "Ref": "AuditSpiFirehoseLog285129C5"
      }
    },
    "SpiFirehoseLogStreamName": {
      "Description": "Pix-Proxy Audit Spi Firehose CloudWatch Log Stream name",
      "Value": {
        "Ref": "AuditSpiFirehoseLogStreamE1470ACD"
      }
    },
    "SpiGlueTableName": {
      "Description": "Pix-Proxy Audit Spi Glue Table name",
      "Value": {
        "Ref": "AuditSpiAuditTableA2D0A7A1"
      }
    },
    "PipelineARN": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "arn:",
            {
              "Ref": "AWS::Partition"
            },
            ":codepipeline:",
            {
              "Ref": "AWS::Region"
            },
            ":",
            {
              "Ref": "AWS::AccountId"
            },
            ":",
            {
              "Ref": "Pipeline9850B417"
            }
          ]
        ]
      }
    }
  },
  "Parameters": {
    "MtlsCertificate": {
      "Type": "String",
      "Default": "< IMPORT LATER >",
      "AllowedPattern": ".+",
      "Description": "mTLS Certificate X.509"
    },
    "SignatureKeyId": {
      "Type": "String",
      "AllowedPattern": ".+",
      "Description": "Signature Private Key Id in KMS"
    },
    "SignatureCertificate": {
      "Type": "String",
      "Default": "< IMPORT LATER >",
      "AllowedPattern": ".+",
      "Description": "Signature Certificate X.509"
    },
    "BcbMtlsCertificate": {
      "Type": "String",
      "Default": "< IMPORT LATER >",
      "AllowedPattern": ".+",
      "Description": "BCB mTLS Certificate X.509"
    },
    "BcbSignatureCertificate": {
      "Type": "String",
      "Default": "< IMPORT LATER >",
      "AllowedPattern": ".+",
      "Description": "BCB Signature Certificate X.509"
    },
    "BcbDictEndpoint": {
      "Type": "String",
      "Default": "test.pi.rsfn.net.br:8181",
      "AllowedPattern": ".+",
      "Description": "BCB Dict Endpoint (hostname and optional port). Example: x.pi.rsfn.net.br or x.pi.rsfn.net.br:443"
    },
    "BcbSpiEndpoint": {
      "Type": "String",
      "Default": "test.pi.rsfn.net.br:9191",
      "AllowedPattern": ".+",
      "Description": "BCB Spi Endpoint (hostname and optional port). Example: x.pi.rsfn.net.br or x.pi.rsfn.net.br:443"
    },
    "GitHubToken": {
      "Type": "String",
      "AllowedPattern": ".+",
      "Description": "GitHub OAuth Token",
      "NoEcho": true
    }
  }
}